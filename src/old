                <label>Name 
            <input type="text" name="name" autoComplete="off" value={name} onChange={hendleInputChanga} ref={register} />
                 </label>
                 {errors.name && <p>{errors.name.message}</p>}
                <label>Number
                     <input type="text" name="number" autoComplete="off" value={number} onChange={hendleInputChanga} ref={register}/>
                 </label>
                 {errors.number && <p>{ errors.number.message}</p>}
                <button type="submit">Add contact</button>



            <div className={styles.inputContainer}>
            <label>Find contacts by name </label>
            <form className={styles.formBox}>
                <input type="text"
                    autoComplete="off"
                    onChange={hendlInputFilter} />
                <button type="reset" onClick={resetInputFind} id="btn-reset"><FiX /></button>
            </form>
            </div>





        <li key={props.id} className={styles.contactItem}>
            <div className={styles.contentItem}>
                <span className={styles.nameItem}>{props.name}: </span>
                <span className={styles.phonItem}>{props.number}</span>
            </div>
            <div className={styles.buttonConteiner}>
                <button onClick={async() => {await dispatch(operation.getContactsById(props.id)); dispatch(contactsAction.modalVisible(true));}} ><VscEdit/></button>
                <button onClick={() => dispatch(operation.delContacts(props.id))}><VscTrash/></button>
            </div>
        </li>


        <ol className={styles.contactList}>
            {stateData.map(obj => {
                return (<ContactsListItem key={obj.id}
                    id={obj.id}
                    name={obj.name}
                    number={obj.number}
                />)
            })}
        </ol>



        <div className={styles.modalOverlay}>
                    <form onSubmit={handleSubmit(hendleOnSubmite)}
                     className={styles.mainForm}>
                <label>Name 
            <input type="text" name="name" autoComplete="off" value={name} onChange={hendleInputChanga} ref={register} />
                 </label>
                 {errors.name && <p>{errors.name.message}</p>}
                <label>Number
                     <input type="text" name="number" autoComplete="off" value={number} onChange={hendleInputChanga} ref={register}/>
                 </label>
                 {errors.number && <p>{ errors.number.message}</p>}
                <button type="submit">Save contact</button>
        </form>
        </div>
